#!/usr/bin/perl
#
# run platformio serial monitor in a loop
# -samy kamkar

use strict;

my @particle = qw/particle serial monitor --follow/;
my @pio = qw/platformio device monitor/;

# pio config locations
my @pinis = map { (("../" x $_) . "platformio.ini") } 0 .. 2;

# find platformio ini
my ($pini) = grep { -e $_ } @pinis;
if ($pini)
{
  # add serial port + baud rate if found
  my %pio = read_pio_config($pini);
  my $env = "env:$pio{platformio}{default_envs}";
  push(@pio, "-p", $pio{$env}{upload_port}  ) if $pio{$env}{upload_port};
  push(@pio, "-b", $pio{$env}{monitor_speed}) if $pio{$env}{monitor_speed};

  # if no baud rate, let's see if we can find it in code
  if (!$pio{$env}{monitor_speed})
  {
    my $src = $pio{$env}{src_dir} || "src";
    my @files = glob("$src/*.{c,cpp,h,ino}");
    my $baud;
    foreach my $file (@files)
    {
      open(F, "<$file") || die "Can't read $file: $!";
      while (<F>)
      {
        if (/Serial\.begin\(\s*(\d+)\s*\)/)
        {
          $baud = $1;
          last;
        }
      }
      close(F);
      last if $baud;
    }
    push(@pio, "-b", $baud) if $baud;
  }
}

my @run = ($pini ? @pio : @particle, @ARGV);
print "@run\n";
while (1)
{
  system(@run);
  sleep(2);
}

sub read_pio_config
{
  my $pini = shift;
  my %pio;
  {
    open(P, "<$pini") || die "Can't read $pini: $!";
    my ($last, $section, $fSection);
    while (<P>)
    {
      # ignore comments / whitespace
      next if /^\s*(;.*)?$/;

      if (/^ ?(\w+)\s*=\s*(.*)/)
      {
        $last = $1;
        $pio{$section}{$1} = $2;
      }
      elsif (/^\s+(.*)/ && $last)
      {
        $pio{$section}{$last} .= " $1";
      }
      # track section
      elsif (/^\s*\[(.*?)\]/)
      {
        $section = $1;
        # set default_envs to first section if there is no default_envs
        $pio{platformio}{default_envs} ||= $1 if $section =~ /^env:(.*)$/;
      }
      else
      {
        print STDERR "unknown line: $_\n";
      }
    }
    close(P);
  }

  use Data::Dumper;
  print Dumper(\%pio);

  return %pio;
}

