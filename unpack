#!/usr/bin/perl
#
# recursively unpacks all file
# -samy kamkar 2020/11/01

use strict;
use Cwd;

die "usage: $0 <file / path>\n" unless @ARGV == 1;

my %formats = (
  "bzip2" => "bzip -d 'FILE'",
  "cpio"  => "cpio -idv -F 'FILE'",
  "xar"   => "xar -xv -f 'FILE'",
  "gzip"  => "zcat 'FILE' > 'FILE.unp'",
  "7-zip" => "7z x FILE",
  "xz"    => "xz -vd FILE",
);
my %exts = (
  "7z"  => "7-zip",
  "gz"  => "gzip"
);
my %files;
find(shift);

sub find
{
  foreach my $file (@_)
  {
    print "searching $file\n";
    -d $file ? find(<$file/*>) : explode($file);
  }
}

sub explode
{
  foreach my $file (@_)
  {
    print "FILE: $file\n";
    # skip files if we've already unpacked them
    next if $files{$file}++;

    chomp(my $type = `file '$file'`);
    (undef, $type) = split(/:\s+/, $type, 2);

    my $unpack = type($type, $file);
    print "searching $file ($type)\n";
    if ($unpack)
    {
      $unpack =~ s/FILE/$file/g;
      print STDERR "> $unpack";
      system($unpack);

      # rescan unpacked files
      find(<*>);
    }
  }
}

sub type
{
  my ($type, $file) = @_;
  foreach my $format (keys %formats)
  {
    return $formats{$format} if $type =~ /$format/i
  }
  return $formats{$exts{$1}} if $file =~ /\.([^.]+)$/;
}
